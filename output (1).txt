import React, { useState } from 'react';
import { Download, Headphones, Zap, Shield, Smartphone, CheckCircle, Copy, Play } from 'lucide-react';

export default function App() {
  const [videoUrl, setVideoUrl] = useState('');
  const [isConverting, setIsConverting] = useState(false);
  const [isConverted, setIsConverted] = useState(false);
  const [videoInfo, setVideoInfo] = useState(null);

  const handleConvert = async () => {
    if (!videoUrl.trim()) {
      alert('Please enter a YouTube URL');
      return;
    }

    // Validate YouTube URL
    const youtubeRegex = /^(https?:\/\/)?(www\.)?(youtube\.com|youtu\.?be)\/.+$/;
    if (!youtubeRegex.test(videoUrl)) {
      alert('Please enter a valid YouTube URL');
      return;
    }

    setIsConverting(true);
    setIsConverted(false);

    // Simulate conversion process
    try {
      // In a real app, this would be an API call
      await new Promise(resolve => setTimeout(resolve, 3000));
      
      // Mock video info
      setVideoInfo({
        title: "Sample YouTube Video Title",
        duration: "3:45",
        thumbnail: "https://placehold.co/320x180/000000/00ff41?text=Video+Thumbnail"
      });
      
      setIsConverted(true);
    } catch (error) {
      alert('Conversion failed. Please try again.');
    } finally {
      setIsConverting(false);
    }
  };

  const handleDownload = () => {
    // In a real app, this would download the actual file
    alert('In a real implementation, this would download your MP3 file');
  };

  const handlePasteExample = () => {
    setVideoUrl('https://www.youtube.com/watch?v=dQw4w9WgXcQ');
  };

  return (
    <div className="min-h-screen bg-black text-green-400">
      {/* Header */}
      <div className="bg-black border-b border-green-500/30">
        <div className="container mx-auto px-4 py-8">
          <div className="text-center">
            <h1 className="text-4xl md:text-5xl font-bold mb-4 flex items-center justify-center gap-3">
              <Download className="text-green-400" size={40} />
              YT to MP3 Converter
            </h1>
            <p className="text-green-300 text-lg mb-4">Convert YouTube videos to high-quality MP3 files at 320kbps</p>
            <div className="inline-block bg-green-500/20 text-green-400 px-4 py-2 rounded-full text-sm font-semibold border border-green-500/30">
              320kbps High Quality Audio
            </div>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="container mx-auto px-4 py-12">
        {/* Converter Section */}
        <div className="max-w-3xl mx-auto mb-12">
          <div className="bg-black rounded-2xl border border-green-500/30 p-8 shadow-2xl shadow-green-500/10">
            <div className="flex flex-col sm:flex-row gap-4 mb-6">
              <input
                type="text"
                value={videoUrl}
                onChange={(e) => setVideoUrl(e.target.value)}
                placeholder="Paste YouTube URL here..."
                className="flex-1 bg-black border border-green-500/30 rounded-xl px-6 py-4 text-green-100 placeholder-green-500/50 focus:outline-none focus:border-green-400 focus:ring-2 focus:ring-green-500/20 transition-all"
              />
              <button
                onClick={handleConvert}
                disabled={isConverting}
                className="bg-green-500 hover:bg-green-400 disabled:bg-green-700 text-black font-bold py-4 px-8 rounded-xl transition-all duration-300 flex items-center justify-center gap-2 whitespace-nowrap shadow-lg shadow-green-500/20 hover:shadow-green-500/30"
              >
                {isConverting ? (
                  <>
                    <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-black"></div>
                    Converting...
                  </>
                ) : (
                  <>
                    <Download size={20} />
                    Convert
                  </>
                )}
              </button>
            </div>

            <button
              onClick={handlePasteExample}
              className="text-green-500 hover:text-green-400 text-sm flex items-center gap-1 transition-colors"
            >
              <Copy size={14} />
              Paste example URL
            </button>
          </div>

          {/* Loading State */}
          {isConverting && (
            <div className="bg-black rounded-2xl border border-green-500/30 p-8 text-center">
              <div className="flex flex-col items-center justify-center">
                <div className="animate-spin rounded-full h-16 w-16 border-t-2 border-green-500 mb-4"></div>
                <h3 className="text-xl font-semibold mb-2">Converting your video...</h3>
                <p className="text-green-500">This may take a moment</p>
                <div className="mt-4 w-full max-w-md bg-gray-900 rounded-full h-2">
                  <div className="bg-green-500 h-2 rounded-full animate-pulse" style={{ width: '75%' }}></div>
                </div>
              </div>
            </div>
          )}

          {/* Result State */}
          {isConverted && videoInfo && (
            <div className="bg-black rounded-2xl border border-green-500/30 p-8">
              <div className="text-center mb-6">
                <CheckCircle className="text-green-500 mx-auto mb-4" size={48} />
                <h2 className="text-2xl font-bold mb-2">Conversion Complete!</h2>
                <p className="text-green-300">Your MP3 file is ready for download</p>
              </div>

              <div className="bg-black rounded-xl p-6 mb-6 border border-green-500/20">
                <div className="flex flex-col md:flex-row gap-6 items-center">
                  <img 
                    src={videoInfo.thumbnail} 
                    alt="Video thumbnail" 
                    className="w-full md:w-48 rounded-lg"
                  />
                  <div className="flex-1 text-left">
                    <h3 className="text-xl font-semibold mb-2">{videoInfo.title}</h3>
                    <div className="flex items-center gap-4 text-green-500">
                      <span className="flex items-center gap-1">
                        <Play size={16} />
                        {videoInfo.duration}
                      </span>
                      <span className="flex items-center gap-1">
                        <Headphones size={16} />
                        320kbps
                      </span>
                    </div>
                  </div>
                </div>
              </div>

              <div className="text-center">
                <button
                  onClick={handleDownload}
                  className="bg-green-500 hover:bg-green-400 text-black font-bold py-4 px-12 rounded-xl text-lg transition-all duration-300 flex items-center gap-3 mx-auto shadow-lg shadow-green-500/30 hover:shadow-green-500/40"
                >
                  <Download size={24} />
                  Download MP3
                </button>
                <p className="text-green-600 text-sm mt-4">File size: ~5.2 MB</p>
              </div>
            </div>
          )}
        </div>

        {/* Features */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12">
          <div className="bg-black border border-green-500/30 rounded-xl p-6 hover:border-green-400 transition-all hover:shadow-lg hover:shadow-green-500/10">
            <div className="text-green-500 mb-4">
              <Headphones size={32} />
            </div>
            <h3 className="text-xl font-semibold mb-2">High Quality</h3>
            <p className="text-green-300">320kbps bitrate for crystal clear audio</p>
          </div>

          <div className="bg-black border border-green-500/30 rounded-xl p-6 hover:border-green-400 transition-all hover:shadow-lg hover:shadow-green-500/10">
            <div className="text-green-500 mb-4">
              <Zap size={32} />
            </div>
            <h3 className="text-xl font-semibold mb-2">Fast Conversion</h3>
            <p className="text-green-300">Convert videos in seconds</p>
          </div>

          <div className="bg-black border border-green-500/30 rounded-xl p-6 hover:border-green-400 transition-all hover:shadow-lg hover:shadow-green-500/10">
            <div className="text-green-500 mb-4">
              <Shield size={32} />
            </div>
            <h3 className="text-xl font-semibold mb-2">Secure</h3>
            <p className="text-green-300">Your data is never stored on our servers</p>
          </div>

          <div className="bg-black border border-green-500/30 rounded-xl p-6 hover:border-green-400 transition-all hover:shadow-lg hover:shadow-green-500/10">
            <div className="text-green-500 mb-4">
              <Smartphone size={32} />
            </div>
            <h3 className="text-xl font-semibold mb-2">Mobile Friendly</h3>
            <p className="text-green-300">Works on all devices and browsers</p>
          </div>
        </div>

        {/* Instructions */}
        <div className="bg-black border border-green-500/30 rounded-2xl p-8">
          <h2 className="text-2xl font-bold text-center mb-8">How to Convert YouTube Videos</h2>
          <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
            <div className="text-center">
              <div className="bg-green-500/20 text-green-400 w-12 h-12 rounded-full flex items-center justify-center mx-auto mb-4 font-bold text-lg border border-green-500/30">1</div>
              <h3 className="text-lg font-semibold mb-2">Copy URL</h3>
              <p className="text-green-300">Copy the YouTube video URL from your browser</p>
            </div>
            <div className="text-center">
              <div className="bg-green-500/20 text-green-400 w-12 h-12 rounded-full flex items-center justify-center mx-auto mb-4 font-bold text-lg border border-green-500/30">2</div>
              <h3 className="text-lg font-semibold mb-2">Paste URL</h3>
              <p className="text-green-300">Paste the URL into the input field above</p>
            </div>
            <div className="text-center">
              <div className="bg-green-500/20 text-green-400 w-12 h-12 rounded-full flex items-center justify-center mx-auto mb-4 font-bold text-lg border border-green-500/30">3</div>
              <h3 className="text-lg font-semibold mb-2">Convert</h3>
              <p className="text-green-300">Click the convert button and wait for processing</p>
            </div>
            <div className="text-center">
              <div className="bg-green-500/20 text-green-400 w-12 h-12 rounded-full flex items-center justify-center mx-auto mb-4 font-bold text-lg border border-green-500/30">4</div>
              <h3 className="text-lg font-semibold mb-2">Download</h3>
              <p className="text-green-300">Download your high-quality MP3 file</p>
            </div>
          </div>
        </div>
      </div>

      {/* Footer */}
      <footer className="bg-black border-t border-green-500/30 py-8 mt-12">
        <div className="container mx-auto px-4 text-center">
          <p className="text-green-600">© 2023 YT to MP3 Converter | This is a frontend demonstration only</p>
          <p className="text-green-700 text-sm mt-2">Note: This is a demo interface. Actual conversion requires backend implementation.</p>
        </div>
      </footer>
    </div>
  );
}